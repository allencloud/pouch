# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  lint-markdown-docs:
    docker:
      # specify the version
      - image: allencloud/mdl:v0.4
    
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          name: use markdownlint v0.4.0 to lint markdown file (https://github.com/markdownlint/markdownlint)
          command: find  ./ -name  "*.md" | grep -v vendor | grep -v extra | grep -v commandline | grep -v .github | grep -v swagger | grep -v api | xargs mdl -r ~MD013,~MD024,~MD029,~MD033,~MD036

  golint:
    docker: 
      - image: golang:1.9.1
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - run: go get github.com/golang/lint/golint 
      - run: 
          name: use check target in Makefile to check code
          command: make check
  
  unit-test:
    docker:
      - image: golang:1.9.1
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      - checkout
      - run:
          name: unit test
          command: make unit-test

workflows:
  version: 2
  ci:
    jobs:
      - lint-markdown-docs
      - golint
      - unit-test